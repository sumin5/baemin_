<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="baemin.member.mapper.marketMapper">

	<!-- 음식점 상세정보 입력  -->
	<insert id="marketDetailInsert" parameterType="baemin.market.domain.MarketDTO">
		insert into tbl_market (
			market_id,
			market_name,
			category_code_group_id,
			category_code_id,
			market_zipcode,
			address_code_group_id,
			address_code_id,
			market_state_group_id,
			market_state_id,
			market_road,
			address_detail,
			phone,
			opening_time,
			closing_time,
			min_price,
			system_id			
		)
		values (
			#{marketId},
			#{marketName},
			'G',
			#{categoryCodeId},
			#{marketZipcode},
			SUBSTR(#{marketZipcode},1,2),
			SUBSTR(#{marketZipcode},3,1),
			'A',
			'1',
			#{marketRoad},
			#{addressDetail},
			#{phone},
			#{openingTime},
			#{closingTime},
			#{minPrice},
			#{marketId}
		)	
	</insert>
	
	<!-- 음식점 이력 입력-->
	<insert id="marketHistoryInsert" parameterType="baemin.market.domain.MarketDTO">
		insert into tbl_market_history (
			market_id,
			end_date,
			system_id)
		values (
			#{marketId},
			'2037-12-31',
			#{marketId})	
	</insert>
	
	<!-- 메뉴 menuId max값 -->
	<select id="getMenuId" parameterType="string" resultType="int">
		select nvl2(a.market_id, a.mx, 1)
		from (select market_id,
				  	 max(menu_id)+1 mx,
					 count(*) cnt		
			  from tbl_menu
			  where market_id = #{marketId}) a
	</select>	 
	
	<!-- 메뉴 리스트 가져오기 -->
	<select id="getMenuList" parameterType="String" resultType="baemin.market.domain.MenuDTO">
		with b as
		(select tod.order_num ton,
				tod.market_id tmki,
				tod.menu_id tmni,
				sum(tod.how_many) sm,	<!-- 메뉴별 누적 주문 건수-->
				tor.user_id tui,
				tor.order_cancel_YN toc
		from tbl_order tor join tbl_order_detail tod on tor.order_num = tod.order_num 
		where tod.market_id = #{marketId}
			and tor.order_cancel_YN = "N"	<!-- Y:주문취소, N:주문OK -->
		group by tod.menu_id)
		select a.market_id ,	
				a.menu_id ,
				a.menu_name ,
				a.menu_price ,
				a.introduce ,
				date_format(a.sys_reg_date, '%Y-%m-%d') sys_reg_date,
				coalesce (b.sm, 0) as sm 
		from tbl_menu a left outer join	b 
		on a.market_id = b.tmki
			and a.menu_id = b.tmni
		where a.market_id = #{marketId}
		order by a.menu_id;	
	</select>		
	
	<!-- 메뉴 정보 입력 --> 
	<insert id="menuInsertion" parameterType="baemin.market.domain.MenuDTO">
		insert into tbl_menu (market_id, 
							menu_id,
							menu_name,
							menu_price,
							introduce,
							system_id) 
		values( #{marketId}, 
				#{menuId},
				#{menuName},
				#{menuPrice}, 
				#{introduce},
				#{marketId})
	</insert> 
	
	<!-- 메뉴 이력 입력 -->
	<insert id="menuHistoryInsertion" parameterType="baemin.market.domain.MenuDTO">
		insert into tbl_menu_history (
			menu_id,
			market_id, 
			end_date,
			system_id)
		values (
			#{menuId},
			#{marketId},
			'2037-12-31',
			#{marketId}
		)
	</insert>
	
	<!-- 메뉴 정보 가져오기 -->
	<select id="getMenuDetail" parameterType="map" resultType="baemin.market.domain.MenuDTO">
		select market_id,
				menu_id,
				menu_name,
				menu_price,
				introduce
		from tbl_menu
		where market_id = #{marketId}
			and menu_id = #{menuId}
	</select>
	
	<!-- 메뉴 정보 업데이트 -->
	<update id="menuUpdate" parameterType="baemin.market.domain.MenuDTO">
		update tbl_menu 
		set menu_name = #{menuName},
			menu_price = #{menuPrice},
			introduce = #{introduce},
			sys_mod_date = now()
		where market_id = #{marketId}
			and menu_id = #{menuId}
	</update>
	
	<!-- 메뉴 이력 업데이트 -->
	
	
	
	
	
	
	<!-- 메뉴 정보 삭제 -->
	<delete id="menuDelete" parameterType="map">
		delete from tbl_menu
		where menu_id = #{menuId}
			and market_id = #{marketId}
	</delete>
	
	
	
	
	
	
	
	
	
	
	<!-- test용, 끝나면 삭제하기 -->
	<select id="test" resultType="hashmap">
		select * from test_table
		<!--  
		where market_id = "2"
		-->
	</select>
	
</mapper>